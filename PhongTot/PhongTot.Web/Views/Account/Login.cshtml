@using PhongTot.Web.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<div class="login">
    <div class="content">
        <!-- BEGIN LOGIN FORM -->
        <div class="login-form">
            <h3 class="form-title">Đăng Nhập</h3>
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form", @class = "boxLogin", @id = "frmLogin" }))
            {
                <div class="alert alert-danger hidden" id="alert">
                    <button type="button" class="close" data-close="alert"></button>
                    <span id="login_error">
                        @ViewBag.message
                    </span>
                </div>
                if (ViewBag.message != null)
                {
                    <div class="alert alert-danger hidden" id="alert">
                        <button type="button" class="close" data-close="alert"></button>
                        <span id="login_error">
                            Enter any username and password.
                        </span>
                    </div>
                }
                @Html.AntiForgeryToken()
                @Html.ValidationMessage("CustomError")
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-solid placeholder-no-fix", id = "Email", placeholder = "Nhập Email của bạn....." })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    @*<input class="form-control form-control-solid placeholder-no-fix" type="text" autocomplete="off" placeholder="Tên Tài Khoản....." name="Email" />*@
                </div>
                <div class="form-group">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control form-control-solid placeholder-no-fix", id = "Password", placeholder = "Mật Khẩu....." })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    @*<input class="form-control form-control-solid placeholder-no-fix" type="password" autocomplete="off" placeholder="Mật Khẩu....." name="Password" />*@
                </div>
                @*<div class="alert-danger" id="login_error"></div>*@
                <div class="form-actions">
                    <button id="btnLogin" type="submit" class="btn btn-lg btn-success uppercase">
                        Đăng Nhập
                        <i id="ispinner" style="display:none;" class="fa fa-spinner"></i>
                    </button>

                    <a href="javascript:;" id="forget-password" class="forget-password">Quên Mật Khâủ?</a>
                </div>
            }
            <div class="login-options">
                <div class="social-icons">
                    @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
                </div>
                @*<div class="social-icons">
                        @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
                    </div>*@
            </div>
        </div>
    </div>
</div>
<script src="~/Content/Client/js/jquery.validate.js"></script>
<script src="~/Content/Client/js/jquery.validate.unobtrusive.js"></script>
<script type="text/javascript">
    //fix đường dẫn khi login bằng facebook
    if (window.location.hash == '#_=_') {
        history.replaceState
            ? history.replaceState(null, null, window.location.href.split('#')[0])
            : window.location.hash = '';
    }


    $('#frmLogin').submit(function () {
        $('#btnLogin').attr('disabled', 'disabled');
        $('#ispinner').show();
        if (!$(this).valid()) {
            $('#btnLogin').removeAttr('disabled');
            $('#ispinner').hide();
        }
    });
</script>
